# Multi-stage build for full-stack application
FROM node:18-alpine AS frontend-builder

# Build frontend
WORKDIR /app/frontend
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Backend stage
FROM node:18-alpine AS backend

# Install backend dependencies
WORKDIR /app/backend
COPY backend/package*.json ./
RUN npm install --production

# Copy backend source
COPY backend/ ./

# Production stage
FROM nginx:alpine AS production

# Install Node.js for the backend
RUN apk add --no-cache nodejs npm

# Copy built frontend
COPY --from=frontend-builder /app/frontend/dist /usr/share/nginx/html

# Copy backend
COPY --from=backend /app/backend /app/backend

# Copy nginx configuration
COPY nginx.fullstack.conf /etc/nginx/nginx.conf

# Copy startup script
COPY scripts/start.sh /start.sh
RUN chmod +x /start.sh

# Create data directory with proper permissions
RUN mkdir -p /data && chown -R nginx:nginx /data

# Expose ports
EXPOSE 80 3001

# Start both services
CMD ["/start.sh"]